#!/bin/bash
################################################################
# ESP32 Release builder
# ====================
# (C) @hpsaturn 2022
# 
# This tool needs a PlatformIO project builded. It will make an
# installer of your current builds in the current directory.
#
# --------------------------------------------------------------
# Based in the original deploy tool from CanAirIO firmware, but
# here it is a general tool for any project.
################################################################

DFLNAME=`basename "$PWD"`
DATE=`date +%Y%m%d%H%M%S`
FIRMDIR=.pio/build
RELDIR="releases"

# CONFIGURATION
VERSION="${FIRMVER:-$DATE}"
NAME="${FIRMNAME:-$DFLNAME}"
PIO_HOME=~/.platformio/packages/framework-arduinoespressif32@3.20003.220626
PIO_ESP32_BIN=$PIO_HOME/tools/sdk/esp32/bin
PIO_PARTITIONS=$PIO_HOME/tools/partitions

check_esptool () {
  esptool_path=`command -v esptool`
  if [ "$esptool_path" = "" ]; then
	  echo "Please install esptool first"
    exit 1
  fi
}

check_firmdir () {
  if [ ! -d "$FIRMDIR" ]; then
	  echo "The $FIRMDIR directory does not exist. Please build your project first :D"
    exit 1
  fi 
}

check_binaries () {
  for d in */ ; do
    if [ ! -e $d/firmware.bin ]; then
      echo "Missing firmware file on $d"
      exit 1
    fi
  done
}

showHelp () {
  echo ""
  echo "*******************************"
  echo "** Build release tool        **"
  echo "*******************************"
  echo ""
  echo "usage:"
  echo ""
  echo "deploy [build|clean|publish|help"
  echo ""
}

clean () {
  rm -rf .pio/release
}

build () {
  clean
  check_esptool
  check_firmdir
  cd $FIRMDIR
  check_binaries

  mkdir -p ../release
  for dir in */ ; do
    FLAVOR=`basename $dir`
    OUTPUT="${NAME}_${FLAVOR}_v${VERSION}.bin"
    echo "Generating merge binary for $OUTPUT"
    esptool --chip esp32 merge_bin -o ../release/${OUTPUT}  --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 $PIO_ESP32_BIN/bootloader_dio_40m.bin 0x8000 $FLAVOR/partitions.bin 0xe000 $PIO_PARTITIONS/boot_app0.bin 0x10000 $FLAVOR/firmware.bin
    md5sum ../release/${OUTPUT}
  done
  cd ../release
  zip ../../${NAME}_${FLAVOR}_v${VERSION}.zip *.bin
}

publish_release () {
  echo "Publishing release: v${VERSION}" 
  echo "uploading: ${NAME}_${TARGET}_rev${SRC_REV}_${DATE}.zip"
  git tag -a "v${SRC_VER}" -m "release v${SRC_VER} rev${SRC_REV}"
  git push origin "v${SRC_VER}"
  git log -n 10 --pretty=format:"%h %s" | gh release create "v${SRC_VER}" -F - -t "v${SRC_VER} rev${SRC_REV}" -p ${NAME}_${TARGET}_rev${SRC_REV}_${DATE}.zip
}

if [ "$1" = "" ]; then
  showHelp
else
  case "$1" in
    clean)
      clean
      ;;

    -help)
      showHelp
      ;;

    help)
      showHelp
      ;;

    build)
      build
      ;;

    publish)
      publish_release
      ;;

    *)
      pio run  
      ;;
  esac
fi

exit 0

