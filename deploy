#!/bin/bash
################################################################
# ESP32 Release builder
# ====================
# (C) @hpsaturn 2022
# 
# This tool needs a PlatformIO project builded. It will make an
# installer of your current builds in the current directory.
#
# --------------------------------------------------------------
# Based in the original deploy tool from CanAirIO firmware, but
# here it is a general tool for any project.
################################################################

NAME=`basename "$PWD"`
DATE=`date +%Y%m%d%H%M%S`
FIRMDIR=.pio/build
RELDIR="releases"
VERSION="${FIRMVER:-$DATE}"
PIO_HOME=~/.platformio

check_esptool () {
  esptool_path=`command -v esptool`
  if [ "$esptool_path" = "" ]; then
	  echo "Please install esptool first"
    exit 1
  fi
}

check_firmdir () {
  if [ ! -d "$FIRMDIR" ]; then
	  echo "The $FIRMDIR directory does not exist. Please build your project first :D"
    exit 1
  fi 
}

check_binaries () {
  for d in */ ; do
    if [ ! -e $d/firmware.bin ]; then
      echo "Missing firmware file on $d"
      exit 1
    fi
  done
}

showHelp () {
  echo ""
  echo "************************************************"
  echo "** Build release flavor or installer package **"
  echo "************************************************"
  echo ""
  echo ""
}

clean () {
  rm -rf .pio/release
}

build () {
  clean
  check_esptool
  check_firmdir
  cd $FIRMDIR
  check_binaries

  echo ""
  echo "***********************************************"
  echo "** Building $1"
  echo "***********************************************"
  echo ""
  
  mkdir -p ../release
  for dir in */ ; do
    FLAVOR=`basename $dir`
    OUTPUT="${NAME}_${FLAVOR}_v${VERSION}.bin"
    echo $OUTPUT
    esptool --chip esp32 merge_bin -o ../release/${OUTPUT}  --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 ${PIO_HOME}/packages/framework-arduinoespressif32@3.20003.220626/tools/sdk/esp32/bin/bootloader_dio_40m.bin 0x8000 $FLAVOR/partitions.bin 0xe000 ${PIO_HOME}/packages/framework-arduinoespressif32@3.20003.220626/tools/partitions/boot_app0.bin 0x10000 $FLAVOR/firmware.bin

    # esptool --chip esp32 merge_bin -o ../release/${OUTPUT} --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 $PIO_HOME/packages/framework-arduinoespressif32@3.20003.220626/tools/sdk/esp32/bin/bootloader_dio_40m.bin 0x8000 esp32dev/partitions.bin 0xe000 ~/.platformio/packages/framework-arduinoespressif32@3.20003.220626/tools/partitions/boot_app0.bin 0x10000 esp32dev/firmware.bin
    md5sum ../release/${OUTPUT}
    # md5sum ../release/${NAME}_${FLAVOR}_v${VERSION}_merged.bin
  done
  cd ../release
  zip ../../${NAME}_${FLAVOR}_v${VERSION}.zip *.bin
}

buildInstaller () {
  echo "***********************************************"
  echo "** Building installer with target: $TARGET"
  echo "***********************************************"
  echo ""
  echo "Update installer tool.."
  cp $PIO_HOME/packages/tool-esptoolpy@1.30300.0/esptool.py $INSDIR/
  echo "Update installer flavors.."
  rm -f $INSDIR/*.bin
  cp $RELDIR/$BINDIR/*/*${SRC_REV}_merged.bin $INSDIR/
  cp ${PIO_HOME}/packages/tool-esptoolpy/esptool.py $INSDIR/
  cd $INSDIR/..
  rm -f ${NAME}_${TARGET}_rev${SRC_REV}_${DATE}.zip
  zip -r ${NAME}_${TARGET}_rev${SRC_REV}_${DATE}.zip ${NAME}_installer
  echo ""
  du -hs ${NAME}_${TARGET}_rev${SRC_REV}_${DATE}.zip
  echo ""
}

publish_release () {
  cd $INSDIR/..
  # github-release upload --owner ${OWNER} --repo ${REPO} --tag "rev${SRC_REV}" --release-name "rev${SRC_REV} v${SRC_VER}" --body "${COMMIT_LOG}" ${NAME}_${TARGET}_rev${SRC_REV}_${DATE}.zip
  echo "Publishing release: v${SRC_VER} rev${SRC_REV}" 
  echo "uploading: ${NAME}_${TARGET}_rev${SRC_REV}_${DATE}.zip"
  git tag -a "v${SRC_VER}" -m "release v${SRC_VER} rev${SRC_REV}"
  git push origin "v${SRC_VER}"
  git log -n 10 --pretty=format:"%h %s" | gh release create "v${SRC_VER}" -F - -t "v${SRC_VER} rev${SRC_REV}" -p ${NAME}_${TARGET}_rev${SRC_REV}_${DATE}.zip
}

if [ "$1" = "" ]; then
  showHelp
else
  case "$1" in
    clean)
      clean
      ;;

    installer)
      buildInstaller
      ;;

    help)
      showHelp
      ;;

    --help)
      showHelp
      ;;

    -help)
      showHelp
      ;;

    build)
      build
      ;;

    github)
      publish_release
      ;;

    ota)
      publish_release_ota
      ;;

    webi)
      publish_release_webtools
      ;;

    list)
      for flavor in $flavors; do
          echo $flavor
      done
      ;;

    *)
      pio run  
      ;;
  esac
fi

exit 0

